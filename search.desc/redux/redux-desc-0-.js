searchState.loadedDescShard("redux", 0, "Time in nanoseconds from std::time::UNIX_EPOCH.\nAction with additional metadata like: id.\nAction with additional metadata like: id.\nA measurement of a monotonically nondecreasing clock. …\nFunction signature for a reducer.\nMain struct for the state machine.\nUseful when state machine is split into multiple crates. …\nA measurement of the system clock, useful for talking to …\nTime service.\nTime in nanoseconds from std::time::UNIX_EPOCH.\nAn anchor in time which can be used to create new …\nPanics\nPanics\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nReturns the amount of time elapsed from another instant to …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nRecursion depth of a given action.\nRecursion depth of a given action.\nDispatch an Action.\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed from an earlier point …\nReturns the amount of time elapsed since this instant.\nReturns the difference from this system time to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEnabling condition for the Action.\nEnabling condition for the Action.\nConverts monotonic time to nanoseconds since Unix epoch.\nConvert monotonic time to system clock in nanoseconds from …\nCreates a new store.\nCaller must make sure such action actually exists!\nReturns an instant corresponding to “now”.\nReturns the system time corresponding to “now”.\nReturns the amount of time elapsed from another instant to …\nSplits the struct into a tuple of action and it’s …\nReturns the current state.\nCurrent State.\nReturns the amount of time elapsed from another instant to …\nDispatch an Action (For <code>SubStore</code>).")