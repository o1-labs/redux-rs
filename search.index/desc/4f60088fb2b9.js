rd_("fPanicsAdCreates a new store.CcReturns the system time corresponding to \xe2\x80\x9cnow\xe2\x80\x9d.AoReturns the argument unchanged.000000000BaCalls <code>U::from(self)</code>.000000000BbMain struct for the state machine.BbRecursion depth of a given action.0CgSplits the struct into a tuple of action and it\xe2\x80\x99s \xe2\x80\xa6AjReturns the current state.nCurrent State.BaFunction signature for a reducer.CgReturns the difference from this system time to the \xe2\x80\xa6BoTime in nanoseconds from std::time::UNIX_EPOCH.ClUseful when state machine is split into multiple crates. \xe2\x80\xa6CeCreates a callback instance. Must accept a single \xe2\x80\xa6AcDispatch an Action.3BbTime of previously applied action.BiAction with additional metadata like: id.ClA measurement of the system clock, useful for talking to \xe2\x80\xa6CeAn anchor in time which can be used to create new \xe2\x80\xa6BbEnabling condition for the Action.0mTime service.G`Returns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> \xe2\x80\xa6G`Returns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> \xe2\x80\xa6BoDispatch an Action (For <code>SubStore</code>).CbCaller must make sure such action actually exists!8ClReturns the amount of time elapsed from an earlier point \xe2\x80\xa6CnConvert monotonic time to system clock in nanoseconds from \xe2\x80\xa6")