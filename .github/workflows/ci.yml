name: CI

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUST_VERSION: "1.84"

jobs:
  check:
    name: Check and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: o1-labs/mina-rust/.github/actions/setup-rust@develop
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt,clippy

      - name: Setup build dependencies
        uses: o1-labs/mina-rust/.github/actions/setup-build-deps@develop

      - name: Setup Node.js for prettier
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Node.js dependencies
        run: npm install

      - name: Setup development environment
        run: make setup

      - name: Run all checks
        run: make check

  test:
    name: Test Suite
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04, ubuntu-24.04-arm64, macos-latest]
        rust: ["1.84", beta, nightly]
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.rust == 'nightly' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: o1-labs/mina-rust/.github/actions/setup-rust@develop
        with:
          toolchain: ${{ matrix.rust }}
          cache-prefix: ${{ matrix.os }}

      - name: Setup build dependencies
        uses: o1-labs/mina-rust/.github/actions/setup-build-deps@develop

      - name: Build project
        run: make build

      - name: Run tests
        run: make test-all

  test-features:
    name: Test Features
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: o1-labs/mina-rust/.github/actions/setup-rust@develop
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Setup build dependencies
        uses: o1-labs/mina-rust/.github/actions/setup-build-deps@develop

      - name: Test without default features
        run: cargo test --no-default-features

      - name: Test with fuzzing features
        run: make build-fuzzing

  wasm:
    name: WASM Build
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: o1-labs/mina-rust/.github/actions/setup-rust@develop
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Setup WASM
        uses: o1-labs/mina-rust/.github/actions/setup-wasm@develop

      - name: Build for WASM
        run: make build-wasm

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: o1-labs/mina-rust/.github/actions/setup-rust@develop
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Setup build dependencies
        uses: o1-labs/mina-rust/.github/actions/setup-build-deps@develop

      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Run tests with coverage
        run: make test-with-coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./cobertura.xml
          fail_ci_if_error: false

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: o1-labs/mina-rust/.github/actions/setup-rust@develop
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Setup build dependencies
        uses: o1-labs/mina-rust/.github/actions/setup-build-deps@develop

      - name: Generate documentation
        run: make generate-doc

      - name: Deploy documentation
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc
